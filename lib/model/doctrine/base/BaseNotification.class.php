<?php

/**
 * BaseNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $type
 * @property integer $product_id
 * @property date $dateevent
 * @property string $comment
 * @property sfGuardUser $sfGuardUser
 * @property Product $Product
 * 
 * @method integer      getUserId()      Returns the current record's "user_id" value
 * @method string       getType()        Returns the current record's "type" value
 * @method integer      getProductId()   Returns the current record's "product_id" value
 * @method date         getDateevent()   Returns the current record's "dateevent" value
 * @method string       getComment()     Returns the current record's "comment" value
 * @method sfGuardUser  getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method Product      getProduct()     Returns the current record's "Product" value
 * @method Notification setUserId()      Sets the current record's "user_id" value
 * @method Notification setType()        Sets the current record's "type" value
 * @method Notification setProductId()   Sets the current record's "product_id" value
 * @method Notification setDateevent()   Sets the current record's "dateevent" value
 * @method Notification setComment()     Sets the current record's "comment" value
 * @method Notification setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method Notification setProduct()     Sets the current record's "Product" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('notification');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('dateevent', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('comment', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
    }
}