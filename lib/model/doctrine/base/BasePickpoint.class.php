<?php

/**
 * BasePickpoint
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $Address
 * @property boolean $Card
 * @property boolean $Cash
 * @property string $CitiId
 * @property string $CitiName
 * @property string $CitiOwnerId
 * @property string $CountryName
 * @property string $House
 * @property string $dopid
 * @property clob $InDescription
 * @property string $IndoorPlace
 * @property string $Latitude
 * @property string $Longitude
 * @property string $Metro
 * @property string $Name
 * @property string $Number
 * @property clob $OutDescription
 * @property string $OwnerId
 * @property string $PostCode
 * @property string $Region
 * @property string $Status
 * @property string $Street
 * @property string $TypeTitle
 * @property string $WorkTime
 * @property integer $city_id
 * @property boolean $is_public
 * @property City $City
 * 
 * @method string    getAddress()        Returns the current record's "Address" value
 * @method boolean   getCard()           Returns the current record's "Card" value
 * @method boolean   getCash()           Returns the current record's "Cash" value
 * @method string    getCitiId()         Returns the current record's "CitiId" value
 * @method string    getCitiName()       Returns the current record's "CitiName" value
 * @method string    getCitiOwnerId()    Returns the current record's "CitiOwnerId" value
 * @method string    getCountryName()    Returns the current record's "CountryName" value
 * @method string    getHouse()          Returns the current record's "House" value
 * @method string    getDopid()          Returns the current record's "dopid" value
 * @method clob      getInDescription()  Returns the current record's "InDescription" value
 * @method string    getIndoorPlace()    Returns the current record's "IndoorPlace" value
 * @method string    getLatitude()       Returns the current record's "Latitude" value
 * @method string    getLongitude()      Returns the current record's "Longitude" value
 * @method string    getMetro()          Returns the current record's "Metro" value
 * @method string    getName()           Returns the current record's "Name" value
 * @method string    getNumber()         Returns the current record's "Number" value
 * @method clob      getOutDescription() Returns the current record's "OutDescription" value
 * @method string    getOwnerId()        Returns the current record's "OwnerId" value
 * @method string    getPostCode()       Returns the current record's "PostCode" value
 * @method string    getRegion()         Returns the current record's "Region" value
 * @method string    getStatus()         Returns the current record's "Status" value
 * @method string    getStreet()         Returns the current record's "Street" value
 * @method string    getTypeTitle()      Returns the current record's "TypeTitle" value
 * @method string    getWorkTime()       Returns the current record's "WorkTime" value
 * @method integer   getCityId()         Returns the current record's "city_id" value
 * @method boolean   getIsPublic()       Returns the current record's "is_public" value
 * @method City      getCity()           Returns the current record's "City" value
 * @method Pickpoint setAddress()        Sets the current record's "Address" value
 * @method Pickpoint setCard()           Sets the current record's "Card" value
 * @method Pickpoint setCash()           Sets the current record's "Cash" value
 * @method Pickpoint setCitiId()         Sets the current record's "CitiId" value
 * @method Pickpoint setCitiName()       Sets the current record's "CitiName" value
 * @method Pickpoint setCitiOwnerId()    Sets the current record's "CitiOwnerId" value
 * @method Pickpoint setCountryName()    Sets the current record's "CountryName" value
 * @method Pickpoint setHouse()          Sets the current record's "House" value
 * @method Pickpoint setDopid()          Sets the current record's "dopid" value
 * @method Pickpoint setInDescription()  Sets the current record's "InDescription" value
 * @method Pickpoint setIndoorPlace()    Sets the current record's "IndoorPlace" value
 * @method Pickpoint setLatitude()       Sets the current record's "Latitude" value
 * @method Pickpoint setLongitude()      Sets the current record's "Longitude" value
 * @method Pickpoint setMetro()          Sets the current record's "Metro" value
 * @method Pickpoint setName()           Sets the current record's "Name" value
 * @method Pickpoint setNumber()         Sets the current record's "Number" value
 * @method Pickpoint setOutDescription() Sets the current record's "OutDescription" value
 * @method Pickpoint setOwnerId()        Sets the current record's "OwnerId" value
 * @method Pickpoint setPostCode()       Sets the current record's "PostCode" value
 * @method Pickpoint setRegion()         Sets the current record's "Region" value
 * @method Pickpoint setStatus()         Sets the current record's "Status" value
 * @method Pickpoint setStreet()         Sets the current record's "Street" value
 * @method Pickpoint setTypeTitle()      Sets the current record's "TypeTitle" value
 * @method Pickpoint setWorkTime()       Sets the current record's "WorkTime" value
 * @method Pickpoint setCityId()         Sets the current record's "city_id" value
 * @method Pickpoint setIsPublic()       Sets the current record's "is_public" value
 * @method Pickpoint setCity()           Sets the current record's "City" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePickpoint extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pickpoint');
        $this->hasColumn('Address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Card', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('Cash', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('CitiId', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('CitiName', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('CitiOwnerId', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('CountryName', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('House', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('dopid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('InDescription', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('IndoorPlace', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Latitude', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Longitude', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Metro', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Number', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('OutDescription', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('OwnerId', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('PostCode', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Region', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Status', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Street', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('TypeTitle', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('WorkTime', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}