<?php

/**
 * BasePhotosUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $product_id
 * @property string $filename
 * @property string $name
 * @property boolean $is_public
 * @property clob $comment
 * @property integer $point
 * @property clob $comment_manager
 * @property integer $manager_id
 * @property string $username
 * @property sfGuardUser $sfGuardUser
 * @property Product $Product
 * 
 * @method integer     getUserId()          Returns the current record's "user_id" value
 * @method integer     getProductId()       Returns the current record's "product_id" value
 * @method string      getFilename()        Returns the current record's "filename" value
 * @method string      getName()            Returns the current record's "name" value
 * @method boolean     getIsPublic()        Returns the current record's "is_public" value
 * @method clob        getComment()         Returns the current record's "comment" value
 * @method integer     getPoint()           Returns the current record's "point" value
 * @method clob        getCommentManager()  Returns the current record's "comment_manager" value
 * @method integer     getManagerId()       Returns the current record's "manager_id" value
 * @method string      getUsername()        Returns the current record's "username" value
 * @method sfGuardUser getSfGuardUser()     Returns the current record's "sfGuardUser" value
 * @method Product     getProduct()         Returns the current record's "Product" value
 * @method PhotosUser  setUserId()          Sets the current record's "user_id" value
 * @method PhotosUser  setProductId()       Sets the current record's "product_id" value
 * @method PhotosUser  setFilename()        Sets the current record's "filename" value
 * @method PhotosUser  setName()            Sets the current record's "name" value
 * @method PhotosUser  setIsPublic()        Sets the current record's "is_public" value
 * @method PhotosUser  setComment()         Sets the current record's "comment" value
 * @method PhotosUser  setPoint()           Sets the current record's "point" value
 * @method PhotosUser  setCommentManager()  Sets the current record's "comment_manager" value
 * @method PhotosUser  setManagerId()       Sets the current record's "manager_id" value
 * @method PhotosUser  setUsername()        Sets the current record's "username" value
 * @method PhotosUser  setSfGuardUser()     Sets the current record's "sfGuardUser" value
 * @method PhotosUser  setProduct()         Sets the current record's "Product" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhotosUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photos_user');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('filename', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 50,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('comment', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('point', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('comment_manager', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('manager_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
    }
}