<?php

/**
 * BaseProductForBackUp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $code
 * @property clob $content
 * @property integer $price
 * @property integer $bonus
 * @property integer $old_price
 * @property integer $discount
 * @property integer $count
 * @property string $video
 * @property integer $views_count
 * @property integer $votes_count
 * @property integer $rating
 * @property boolean $is_related
 * @property boolean $is_public
 * @property string $title
 * @property string $keywords
 * @property string $description
 * @property integer $parents_id
 * @property integer $id1c
 * @property integer $generalcategory_id
 * @property boolean $adult
 * @property date $endaction
 * @property enum $step
 * 
 * @method string           getName()               Returns the current record's "name" value
 * @method string           getCode()               Returns the current record's "code" value
 * @method clob             getContent()            Returns the current record's "content" value
 * @method integer          getPrice()              Returns the current record's "price" value
 * @method integer          getBonus()              Returns the current record's "bonus" value
 * @method integer          getOldPrice()           Returns the current record's "old_price" value
 * @method integer          getDiscount()           Returns the current record's "discount" value
 * @method integer          getCount()              Returns the current record's "count" value
 * @method string           getVideo()              Returns the current record's "video" value
 * @method integer          getViewsCount()         Returns the current record's "views_count" value
 * @method integer          getVotesCount()         Returns the current record's "votes_count" value
 * @method integer          getRating()             Returns the current record's "rating" value
 * @method boolean          getIsRelated()          Returns the current record's "is_related" value
 * @method boolean          getIsPublic()           Returns the current record's "is_public" value
 * @method string           getTitle()              Returns the current record's "title" value
 * @method string           getKeywords()           Returns the current record's "keywords" value
 * @method string           getDescription()        Returns the current record's "description" value
 * @method integer          getParentsId()          Returns the current record's "parents_id" value
 * @method integer          getId1c()               Returns the current record's "id1c" value
 * @method integer          getGeneralcategoryId()  Returns the current record's "generalcategory_id" value
 * @method boolean          getAdult()              Returns the current record's "adult" value
 * @method date             getEndaction()          Returns the current record's "endaction" value
 * @method enum             getStep()               Returns the current record's "step" value
 * @method ProductForBackUp setName()               Sets the current record's "name" value
 * @method ProductForBackUp setCode()               Sets the current record's "code" value
 * @method ProductForBackUp setContent()            Sets the current record's "content" value
 * @method ProductForBackUp setPrice()              Sets the current record's "price" value
 * @method ProductForBackUp setBonus()              Sets the current record's "bonus" value
 * @method ProductForBackUp setOldPrice()           Sets the current record's "old_price" value
 * @method ProductForBackUp setDiscount()           Sets the current record's "discount" value
 * @method ProductForBackUp setCount()              Sets the current record's "count" value
 * @method ProductForBackUp setVideo()              Sets the current record's "video" value
 * @method ProductForBackUp setViewsCount()         Sets the current record's "views_count" value
 * @method ProductForBackUp setVotesCount()         Sets the current record's "votes_count" value
 * @method ProductForBackUp setRating()             Sets the current record's "rating" value
 * @method ProductForBackUp setIsRelated()          Sets the current record's "is_related" value
 * @method ProductForBackUp setIsPublic()           Sets the current record's "is_public" value
 * @method ProductForBackUp setTitle()              Sets the current record's "title" value
 * @method ProductForBackUp setKeywords()           Sets the current record's "keywords" value
 * @method ProductForBackUp setDescription()        Sets the current record's "description" value
 * @method ProductForBackUp setParentsId()          Sets the current record's "parents_id" value
 * @method ProductForBackUp setId1c()               Sets the current record's "id1c" value
 * @method ProductForBackUp setGeneralcategoryId()  Sets the current record's "generalcategory_id" value
 * @method ProductForBackUp setAdult()              Sets the current record's "adult" value
 * @method ProductForBackUp setEndaction()          Sets the current record's "endaction" value
 * @method ProductForBackUp setStep()               Sets the current record's "step" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductForBackUp extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_for_back_up');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bonus', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('old_price', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('discount', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('video', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('views_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('votes_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('rating', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_related', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('parents_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('id1c', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('generalcategory_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('adult', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('endaction', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('step', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '',
              1 => '1 сутки',
              2 => '2 суток',
              3 => '3 суток',
              4 => '4 суток',
              5 => '5 суток',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             'canUpdate' => false,
             'builder' => 
             array(
              0 => 'SlugifyClass',
              1 => 'Slugify',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
        $this->actAs($sluggable0);
    }
}