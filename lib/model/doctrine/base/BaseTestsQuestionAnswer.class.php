<?php

/**
 * BaseTestsQuestionAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $testquestion_id
 * @property clob $answer
 * @property integer $balls
 * @property TestsQuestion $TestsQuestion
 * 
 * @method integer             getTestquestionId()  Returns the current record's "testquestion_id" value
 * @method clob                getAnswer()          Returns the current record's "answer" value
 * @method integer             getBalls()           Returns the current record's "balls" value
 * @method TestsQuestion       getTestsQuestion()   Returns the current record's "TestsQuestion" value
 * @method TestsQuestionAnswer setTestquestionId()  Sets the current record's "testquestion_id" value
 * @method TestsQuestionAnswer setAnswer()          Sets the current record's "answer" value
 * @method TestsQuestionAnswer setBalls()           Sets the current record's "balls" value
 * @method TestsQuestionAnswer setTestsQuestion()   Sets the current record's "TestsQuestion" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTestsQuestionAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tests_question_answer');
        $this->hasColumn('testquestion_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('answer', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('balls', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TestsQuestion', array(
             'local' => 'testquestion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}