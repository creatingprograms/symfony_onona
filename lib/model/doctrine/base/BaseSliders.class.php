<?php

/**
 * BaseSliders
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $href
 * @property string $alt
 * @property string $file
 * @property boolean $is_active
 * @property string $src
 * @property string $src_mobile
 * @property integer $position
 * @property enum $positionpage
 * @property string $description
 * @property string $button
 * @property boolean $is_small
 * @property boolean $is_onlymoscow
 * @property enum $class
 * @property integer $view_count
 * 
 * @method string  getHref()          Returns the current record's "href" value
 * @method string  getAlt()           Returns the current record's "alt" value
 * @method string  getFile()          Returns the current record's "file" value
 * @method boolean getIsActive()      Returns the current record's "is_active" value
 * @method string  getSrc()           Returns the current record's "src" value
 * @method string  getSrcMobile()     Returns the current record's "src_mobile" value
 * @method integer getPosition()      Returns the current record's "position" value
 * @method enum    getPositionpage()  Returns the current record's "positionpage" value
 * @method string  getDescription()   Returns the current record's "description" value
 * @method string  getButton()        Returns the current record's "button" value
 * @method boolean getIsSmall()       Returns the current record's "is_small" value
 * @method boolean getIsOnlymoscow()  Returns the current record's "is_onlymoscow" value
 * @method enum    getClass()         Returns the current record's "class" value
 * @method integer getViewCount()     Returns the current record's "view_count" value
 * @method Sliders setHref()          Sets the current record's "href" value
 * @method Sliders setAlt()           Sets the current record's "alt" value
 * @method Sliders setFile()          Sets the current record's "file" value
 * @method Sliders setIsActive()      Sets the current record's "is_active" value
 * @method Sliders setSrc()           Sets the current record's "src" value
 * @method Sliders setSrcMobile()     Sets the current record's "src_mobile" value
 * @method Sliders setPosition()      Sets the current record's "position" value
 * @method Sliders setPositionpage()  Sets the current record's "positionpage" value
 * @method Sliders setDescription()   Sets the current record's "description" value
 * @method Sliders setButton()        Sets the current record's "button" value
 * @method Sliders setIsSmall()       Sets the current record's "is_small" value
 * @method Sliders setIsOnlymoscow()  Sets the current record's "is_onlymoscow" value
 * @method Sliders setClass()         Sets the current record's "class" value
 * @method Sliders setViewCount()     Sets the current record's "view_count" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSliders extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sliders');
        $this->hasColumn('href', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('alt', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('src', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('src_mobile', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', null, array(
             'type' => 'integer',
             'default' => 100,
             ));
        $this->hasColumn('positionpage', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'main_new_1',
              1 => 'main_new_2',
              2 => 'main_new_3',
              3 => 'catalog_sex-igrushki-dlja-par_1',
              4 => 'catalog_sex-igrushki-dlja-par_2',
              5 => 'catalog_sex-igrushki-dlja-par_3',
              6 => 'catalog_sex-igrushki-dlya-muzhchin_1',
              7 => 'catalog_sex-igrushki-dlya-muzhchin_2',
              8 => 'catalog_sex-igrushki-dlya-muzhchin_3',
              9 => 'catalog_sex-igrushki-dlya-zhenschin_1',
              10 => 'catalog_sex-igrushki-dlya-zhenschin_2',
              11 => 'catalog_sex-igrushki-dlya-zhenschin_3',
              12 => 'catalog_eroticheskoe-bele_1',
              13 => 'catalog_eroticheskoe-bele_2',
              14 => 'catalog_eroticheskoe-bele_3',
              15 => 'catalog_intimnaya-kosmetika_1',
              16 => 'catalog_intimnaya-kosmetika_2',
              17 => 'catalog_intimnaya-kosmetika_3',
              18 => 'catalog_preparaty_1',
              19 => 'catalog_preparaty_2',
              20 => 'catalog_preparaty_3',
              21 => 'catalog_bdsm-i-fetish_1',
              22 => 'catalog_bdsm-i-fetish_2',
              23 => 'catalog_bdsm-i-fetish_3',
              24 => 'catalog_aksessuary-dlya-seksa_1',
              25 => 'catalog_aksessuary-dlya-seksa_2',
              26 => 'catalog_aksessuary-dlya-seksa_3',
              27 => 'catalog_dlya_novichkov_1',
              28 => 'catalog_dlya_novichkov_2',
              29 => 'catalog_dlya_novichkov_3',
              30 => 'main_page',
              31 => 'main_page_new',
              32 => 'magazins_in_moscow',
              33 => 'sl_sexopedia',
              34 => 'sl_pairs',
              35 => 'sl_man',
              36 => 'sl_woman',
              37 => 'sl_actions',
              38 => 'category_skidki_do_60_percent',
              39 => 'catalog_feb14_1',
              40 => 'catalog_feb14_2',
              41 => 'catalog_feb14_3',
              42 => 'for-him',
             ),
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('button', 'string', 255, array(
             'type' => 'string',
             'default' => 'Условия акции',
             'length' => 255,
             ));
        $this->hasColumn('is_small', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_onlymoscow', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('class', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'promotion-item_cyan',
              1 => 'promotion-item_orange',
              2 => 'promotion-item_blue',
              3 => 'promotion-item_red',
             ),
             ));
        $this->hasColumn('view_count', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}