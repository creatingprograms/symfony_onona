<?php

/**
 * BaseTestsQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $test_id
 * @property clob $question
 * @property integer $number
 * @property Tests $Tests
 * @property Doctrine_Collection $Answer
 * 
 * @method integer             getTestId()   Returns the current record's "test_id" value
 * @method clob                getQuestion() Returns the current record's "question" value
 * @method integer             getNumber()   Returns the current record's "number" value
 * @method Tests               getTests()    Returns the current record's "Tests" value
 * @method Doctrine_Collection getAnswer()   Returns the current record's "Answer" collection
 * @method TestsQuestion       setTestId()   Sets the current record's "test_id" value
 * @method TestsQuestion       setQuestion() Sets the current record's "question" value
 * @method TestsQuestion       setNumber()   Sets the current record's "number" value
 * @method TestsQuestion       setTests()    Sets the current record's "Tests" value
 * @method TestsQuestion       setAnswer()   Sets the current record's "Answer" collection
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTestsQuestion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tests_question');
        $this->hasColumn('test_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('question', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('number', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tests', array(
             'local' => 'test_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('TestsQuestionAnswer as Answer', array(
             'local' => 'id',
             'foreign' => 'testquestion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}