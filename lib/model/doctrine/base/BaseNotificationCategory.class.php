<?php

/**
 * BaseNotificationCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $category_id
 * @property string $user_mail
 * @property boolean $is_enabled
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer              getUserId()      Returns the current record's "user_id" value
 * @method integer              getCategoryId()  Returns the current record's "category_id" value
 * @method string               getUserMail()    Returns the current record's "user_mail" value
 * @method boolean              getIsEnabled()   Returns the current record's "is_enabled" value
 * @method sfGuardUser          getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method NotificationCategory setUserId()      Sets the current record's "user_id" value
 * @method NotificationCategory setCategoryId()  Sets the current record's "category_id" value
 * @method NotificationCategory setUserMail()    Sets the current record's "user_mail" value
 * @method NotificationCategory setIsEnabled()   Sets the current record's "is_enabled" value
 * @method NotificationCategory setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNotificationCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('notification_category');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_mail', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
    }
}