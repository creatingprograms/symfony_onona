<?php

/**
 * BasePhotoalbum
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property clob $content
 * @property Doctrine_Collection $ProductPhotoalbums
 * @property Doctrine_Collection $Photos
 * 
 * @method string              getName()               Returns the current record's "name" value
 * @method clob                getContent()            Returns the current record's "content" value
 * @method Doctrine_Collection getProductPhotoalbums() Returns the current record's "ProductPhotoalbums" collection
 * @method Doctrine_Collection getPhotos()             Returns the current record's "Photos" collection
 * @method Photoalbum          setName()               Sets the current record's "name" value
 * @method Photoalbum          setContent()            Sets the current record's "content" value
 * @method Photoalbum          setProductPhotoalbums() Sets the current record's "ProductPhotoalbums" collection
 * @method Photoalbum          setPhotos()             Sets the current record's "Photos" collection
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhotoalbum extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photoalbum');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Product as ProductPhotoalbums', array(
             'refClass' => 'ProductPhotoalbum',
             'local' => 'photoalbum_id',
             'foreign' => 'product_id'));

        $this->hasMany('Photo as Photos', array(
             'local' => 'id',
             'foreign' => 'album_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}