<?php

/**
 * BaseManufacturer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $subid
 * @property string $name
 * @property clob $content
 * @property boolean $is_public
 * @property boolean $is_popular
 * @property integer $countactionproduct
 * @property integer $maxdiscount
 * @property integer $minprice
 * @property clob $priority_sort_list
 * @property string $title
 * @property string $keywords
 * @property string $description
 * @property string $image
 * 
 * @method integer      getSubid()              Returns the current record's "subid" value
 * @method string       getName()               Returns the current record's "name" value
 * @method clob         getContent()            Returns the current record's "content" value
 * @method boolean      getIsPublic()           Returns the current record's "is_public" value
 * @method boolean      getIsPopular()          Returns the current record's "is_popular" value
 * @method integer      getCountactionproduct() Returns the current record's "countactionproduct" value
 * @method integer      getMaxdiscount()        Returns the current record's "maxdiscount" value
 * @method integer      getMinprice()           Returns the current record's "minprice" value
 * @method clob         getPrioritySortList()   Returns the current record's "priority_sort_list" value
 * @method string       getTitle()              Returns the current record's "title" value
 * @method string       getKeywords()           Returns the current record's "keywords" value
 * @method string       getDescription()        Returns the current record's "description" value
 * @method string       getImage()              Returns the current record's "image" value
 * @method Manufacturer setSubid()              Sets the current record's "subid" value
 * @method Manufacturer setName()               Sets the current record's "name" value
 * @method Manufacturer setContent()            Sets the current record's "content" value
 * @method Manufacturer setIsPublic()           Sets the current record's "is_public" value
 * @method Manufacturer setIsPopular()          Sets the current record's "is_popular" value
 * @method Manufacturer setCountactionproduct() Sets the current record's "countactionproduct" value
 * @method Manufacturer setMaxdiscount()        Sets the current record's "maxdiscount" value
 * @method Manufacturer setMinprice()           Sets the current record's "minprice" value
 * @method Manufacturer setPrioritySortList()   Sets the current record's "priority_sort_list" value
 * @method Manufacturer setTitle()              Sets the current record's "title" value
 * @method Manufacturer setKeywords()           Sets the current record's "keywords" value
 * @method Manufacturer setDescription()        Sets the current record's "description" value
 * @method Manufacturer setImage()              Sets the current record's "image" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseManufacturer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('manufacturer');
        $this->hasColumn('subid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_popular', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('countactionproduct', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('maxdiscount', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('minprice', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('priority_sort_list', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             'canUpdate' => false,
             'builder' => 
             array(
              0 => 'SlugifyClass',
              1 => 'Slugify',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
        $this->actAs($sluggable0);
    }
}