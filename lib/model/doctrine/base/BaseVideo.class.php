<?php

/**
 * BaseVideo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $slug
 * @property clob $link
 * @property clob $videoyoutube
 * @property string $videoserver
 * @property string $photo
 * @property string $timing
 * @property string $subname
 * @property clob $content
 * @property boolean $is_public
 * @property boolean $is_publicmainpage
 * @property boolean $is_related
 * @property string $tag
 * @property string $title
 * @property string $keywords
 * @property string $description
 * @property string $youtubelink
 * @property integer $point
 * @property clob $comment_manager
 * @property integer $manager_id
 * @property string $username
 * @property integer $product_id
 * @property Product $Product
 * 
 * @method string  getName()              Returns the current record's "name" value
 * @method string  getSlug()              Returns the current record's "slug" value
 * @method clob    getLink()              Returns the current record's "link" value
 * @method clob    getVideoyoutube()      Returns the current record's "videoyoutube" value
 * @method string  getVideoserver()       Returns the current record's "videoserver" value
 * @method string  getPhoto()             Returns the current record's "photo" value
 * @method string  getTiming()            Returns the current record's "timing" value
 * @method string  getSubname()           Returns the current record's "subname" value
 * @method clob    getContent()           Returns the current record's "content" value
 * @method boolean getIsPublic()          Returns the current record's "is_public" value
 * @method boolean getIsPublicmainpage()  Returns the current record's "is_publicmainpage" value
 * @method boolean getIsRelated()         Returns the current record's "is_related" value
 * @method string  getTag()               Returns the current record's "tag" value
 * @method string  getTitle()             Returns the current record's "title" value
 * @method string  getKeywords()          Returns the current record's "keywords" value
 * @method string  getDescription()       Returns the current record's "description" value
 * @method string  getYoutubelink()       Returns the current record's "youtubelink" value
 * @method integer getPoint()             Returns the current record's "point" value
 * @method clob    getCommentManager()    Returns the current record's "comment_manager" value
 * @method integer getManagerId()         Returns the current record's "manager_id" value
 * @method string  getUsername()          Returns the current record's "username" value
 * @method integer getProductId()         Returns the current record's "product_id" value
 * @method Product getProduct()           Returns the current record's "Product" value
 * @method Video   setName()              Sets the current record's "name" value
 * @method Video   setSlug()              Sets the current record's "slug" value
 * @method Video   setLink()              Sets the current record's "link" value
 * @method Video   setVideoyoutube()      Sets the current record's "videoyoutube" value
 * @method Video   setVideoserver()       Sets the current record's "videoserver" value
 * @method Video   setPhoto()             Sets the current record's "photo" value
 * @method Video   setTiming()            Sets the current record's "timing" value
 * @method Video   setSubname()           Sets the current record's "subname" value
 * @method Video   setContent()           Sets the current record's "content" value
 * @method Video   setIsPublic()          Sets the current record's "is_public" value
 * @method Video   setIsPublicmainpage()  Sets the current record's "is_publicmainpage" value
 * @method Video   setIsRelated()         Sets the current record's "is_related" value
 * @method Video   setTag()               Sets the current record's "tag" value
 * @method Video   setTitle()             Sets the current record's "title" value
 * @method Video   setKeywords()          Sets the current record's "keywords" value
 * @method Video   setDescription()       Sets the current record's "description" value
 * @method Video   setYoutubelink()       Sets the current record's "youtubelink" value
 * @method Video   setPoint()             Sets the current record's "point" value
 * @method Video   setCommentManager()    Sets the current record's "comment_manager" value
 * @method Video   setManagerId()         Sets the current record's "manager_id" value
 * @method Video   setUsername()          Sets the current record's "username" value
 * @method Video   setProductId()         Sets the current record's "product_id" value
 * @method Video   setProduct()           Sets the current record's "Product" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVideo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('video');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('link', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('videoyoutube', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('videoserver', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('timing', 'string', 25, array(
             'type' => 'string',
             'length' => 25,
             ));
        $this->hasColumn('subname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_publicmainpage', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_related', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('tag', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('youtubelink', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('point', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('comment_manager', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('manager_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             'canUpdate' => false,
             'builder' => 
             array(
              0 => 'SlugifyClass',
              1 => 'Slugify',
             ),
             ));
        $sortable0 = new Doctrine_Template_Sortable();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($sortable0);
    }
}